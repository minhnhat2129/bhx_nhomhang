import streamlit as st
import pandas as pd
import plotly.express as px
import datetime

# ===============================
# C·∫•u h√¨nh trang
# ===============================
st.set_page_config(page_title="Dashboard Doanh thu", layout="wide")
st.title("üìä Dashboard Doanh thu theo Ng√†nh h√†ng & Model")

# ===============================
# Load d·ªØ li·ªáu
# ===============================
file_path = "dthumodel.xlsx"   # üëâ thay b·∫±ng t√™n file d·ªØ li·ªáu
df = pd.read_excel(file_path)

# Chu·∫©n h√≥a t√™n c·ªôt
df.columns = df.columns.str.strip()

# ===============================
# B·ªô l·ªçc
# ===============================
col1, col2 = st.columns(2)

with col1:
    am_list = sorted(df["AM"].dropna().unique())
    am_chon = st.multiselect("Ch·ªçn AM", options=am_list, default=am_list)

df_am = df[df["AM"].isin(am_chon)] if am_chon else df.copy()

with col2:
    sieuthi_list = sorted(df_am["M√£ si√™u th·ªã"].dropna().unique())
    sieuthi_chon = st.multiselect("Ch·ªçn Si√™u th·ªã", options=sieuthi_list, default=sieuthi_list)

df_filtered = df_am[df_am["M√£ si√™u th·ªã"].isin(sieuthi_chon)] if sieuthi_chon else df_am.copy()

# === KPI d√≤ng 1 & 2 ===
doanhthu_hientai = df_filtered["T·ªïng doanh thu"].sum()

today = datetime.date.today()
ngay = today.day

if ngay > 1:
    doanhthu_du_kien = doanhthu_hientai / (ngay - 1) * 30
else:
    doanhthu_du_kien = doanhthu_hientai

col1, col2 = st.columns(2)
with col1:
    st.metric("üí∞ Doanh thu ƒë·∫øn hi·ªán t·∫°i", f"{doanhthu_hientai:,.0f}")
with col2:
    st.metric("üìÖ D·ª± ki·∫øn th√°ng 9", f"{doanhthu_du_kien:,.0f}")

# ===============================
# Bi·ªÉu ƒë·ªì c·ªôt: T·ªïng doanh thu theo Ng√†nh h√†ng
# ===============================
doanhthu_nganhhang = (
    df_filtered.groupby("Ng√†nh h√†ng")[["T·ªïng doanh thu"]]
    .sum()
    .sort_values("T·ªïng doanh thu", ascending=False)
    .reset_index()
)

fig = px.bar(
    doanhthu_nganhhang,
    x="Ng√†nh h√†ng",
    y="T·ªïng doanh thu",
    title="T·ªïng doanh thu theo Ng√†nh h√†ng",
    text_auto=".2s"   # hi·ªÉn th·ªã g·ªçn: 1.2M, 500K
)
fig.update_layout(
    xaxis_tickangle=-45,
    height=600,
    yaxis=dict(title="T·ªïng doanh thu", tickformat=",")
)

st.plotly_chart(fig, use_container_width=True)

# ===============================
# Top 10 nh√≥m h√†ng c√≥ doanh thu cao nh·∫•t
# ===============================
st.subheader("üîù Top 10 Nh√≥m h√†ng c√≥ doanh thu cao nh·∫•t")

top10_nhomhang = (
    df_filtered.groupby("Nh√≥m h√†ng")[["T·ªïng doanh thu"]]
    .sum()
    .sort_values("T·ªïng doanh thu", ascending=False)
    .head(10)
    .reset_index()
)

st.dataframe(
    top10_nhomhang.style.format({"T·ªïng doanh thu": "{:,.0f}"})
)

# ===============================
# Top 5 model c·ªßa 10 nh√≥m h√†ng tr√™n
# ===============================
st.subheader("‚≠ê Top 5 Model b√°n t·ªët nh·∫•t trong 10 Nh√≥m h√†ng")

list_top10 = top10_nhomhang["Nh√≥m h√†ng"].tolist()
df_top10 = df_filtered[df_filtered["Nh√≥m h√†ng"].isin(list_top10)]

# T√≠nh doanh thu theo Model
top5_models_per_group = (
    df_top10.groupby(["Nh√≥m h√†ng", "M√£ Model", "Model"])[["T·ªïng doanh thu", "T·ªïng s·ªë l∆∞·ª£ng"]]
    .sum()
    .reset_index()
)

# L·∫•y top 5 model theo doanh thu trong t·ª´ng nh√≥m h√†ng
result = (
    top5_models_per_group
    .sort_values(["Nh√≥m h√†ng", "T·ªïng doanh thu"], ascending=[True, False])
    .groupby("Nh√≥m h√†ng")
    .head(5)
    .reset_index(drop=True)
)

# === Th√™m t·ªïng doanh thu nh√≥m h√†ng ƒë·ªÉ s·∫Øp x·∫øp ===
nhomhang_order = (
    df_top10.groupby("Nh√≥m h√†ng")[["T·ªïng doanh thu"]]
    .sum()
    .sort_values("T·ªïng doanh thu", ascending=False)
    .reset_index()
)

# Merge ƒë·ªÉ bi·∫øt th·ª© t·ª± nh√≥m h√†ng
result = result.merge(nhomhang_order, on="Nh√≥m h√†ng", suffixes=("", "_nhom"))

# Sort theo t·ªïng doanh thu nh√≥m h√†ng (cao ‚Üí th·∫•p)
result = result.sort_values(["T·ªïng doanh thu_nhom", "T·ªïng doanh thu"], ascending=[False, False])

# Hi·ªÉn th·ªã
st.dataframe(
    result[["Nh√≥m h√†ng", "M√£ Model", "Model", "T·ªïng doanh thu", "T·ªïng s·ªë l∆∞·ª£ng"]]
    .style.format({
        "T·ªïng doanh thu": "{:,.0f}",
        "T·ªïng s·ªë l∆∞·ª£ng": "{:,.0f}"
    })
)
